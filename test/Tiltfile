load('../Tiltfile', 'string_to_bool')
load('../Tiltfile', 'bool_to_string')
load('../Tiltfile', 'default_resources')
load('../Tiltfile', 'set_mode')
load('../Tiltfile', 'dict_merge')
load('../Tiltfile', 'docker_resource')

default_resources()

local_resource(name="test", cmd='echo \'Empty resource\'')

def expect(actual, expected):
  if actual != expected:
    fail("Expected %s, got %s" % (actual, expected))

## Test string_to_bool
expect(string_to_bool('true'), True)
expect(string_to_bool('t'), True)
expect(string_to_bool('f'), False)

## Test bool_to_string
expect(bool_to_string(True), 'true')
expect(bool_to_string(False), 'false')

## Test set_mode
expect(set_mode({ 'dev': ['test'] }, 'dev'), ['test'])
expect(set_mode({}, 'all'), [])
expect(set_mode({}, 'noop'), ['noop'])

## Test dict_merge
expect(dict_merge({ 'a': 1 }, { 'b': 2 }), { 'a': 1, 'b': 2 })
expect(dict_merge({ 'a': 1 }, { 'a': 2 }), { 'a': 2 })

## Test docker resource
resource = docker_resource(
  name='test',
  image='alpine',
  ports=[{ 'host': 8080, 'container': 80 }],
)

expect(resource, {
  "name": "test",
  "depends_on": [],
  "restart": "always",
  "image": "alpine",
  "command": None,
  "entrypoint": None,
  "ports": ["8080:80"],
  "environment": {},
  "labels": []
})

print('All tests passed!')
